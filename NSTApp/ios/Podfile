# Resolve react_native_pods.rb with node to allow for hoisting
require Pod::Executable.execute_command('node', ['-p',
  'require.resolve(
    "react-native/scripts/react_native_pods.rb",
    {paths: [process.argv[1]]},
  )', __dir__]).strip

# use_modular_headers!

platform :ios, min_ios_version_supported
prepare_react_native_project!

linkage = ENV['USE_FRAMEWORKS']
if linkage != nil
  Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
  use_frameworks! :linkage => linkage.to_sym
end

target 'NSTApp' do

  config = use_native_modules!
  # Utilisation de React Native
  use_react_native!(
    :path => config[:reactNativePath],
    # An absolute path to your application root.
    :app_path => "#{Pod::Config.instance.installation_root}/..",
    :hermes_enabled => true
  )

  # Dépendances du projet
  pod 'Firebase/Core', :modular_headers => true
  pod 'GoogleUtilities', :modular_headers => true
  pod 'Firebase/Analytics', :modular_headers => true
  pod 'FirebaseCore', :modular_headers => true
  pod 'FirebaseInstallations', :modular_headers => true
  pod 'FirebaseMessaging', :modular_headers => true

  pod 'RNFBApp', :path => '../node_modules/@react-native-firebase/app', :modular_headers => true
  pod 'RNFBMessaging', :path => '../node_modules/@react-native-firebase/messaging', :modular_headers => true
  pod 'RNPermissions', :path => '../node_modules/react-native-permissions', :modular_headers => true
  pod 'react-native-netinfo', :path => '../node_modules/@react-native-community/netinfo', :modular_headers => true

  pod 'react-native-webview', :path => '../node_modules/react-native-webview', :modular_headers => true
  pod 'react-native-geolocation', :path => '../node_modules/@react-native-community/geolocation', :modular_headers => true
end

post_install do |installer|
  # Ajout des chemins pour les headers et frameworks
  installer.pods_project.targets.each do |target|
    target.build_configurations.each do |config|
      config.build_settings['HEADER_SEARCH_PATHS'] ||= ['$(inherited)']
      config.build_settings['HEADER_SEARCH_PATHS'] << "$(SRCROOT)/node_modules/react-native/React"
      config.build_settings['HEADER_SEARCH_PATHS'] << "$(SRCROOT)/node_modules/react-native/React/Base"
      config.build_settings['HEADER_SEARCH_PATHS'] << "$(SRCROOT)/node_modules/react-native/React/Modules"
      config.build_settings['HEADER_SEARCH_PATHS'] << "$(SRCROOT)/node_modules/react-native/ReactCommon"
      config.build_settings['HEADER_SEARCH_PATHS'] << '/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/Frameworks/Accessibility.framework/Headers'

      config.build_settings['FRAMEWORK_SEARCH_PATHS'] ||= ['$(inherited)']
      config.build_settings['FRAMEWORK_SEARCH_PATHS'] << "$(SRCROOT)/ios/Pods"
      config.build_settings['FRAMEWORK_SEARCH_PATHS'] << "$(SRCROOT)/ios/Pods/FirebaseCore"
      config.build_settings['FRAMEWORK_SEARCH_PATHS'] << '/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/Frameworks'
    end
  end

  # Appel à la méthode React Native post-install
  react_native_post_install(
      installer,
      config[:reactNativePath],
      :mac_catalyst_enabled => false,
      # :ccache_enabled => true
    )
end
